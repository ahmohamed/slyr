with_bindings(
dplyr:::transmute(DF, ..., .preserve = FALSE),
!!!attr(DF, "data_mask")
)
with_bindings(
dplyr:::transmute(DF, !!!enquos(...), .preserve = FALSE),
!!!attr(DF, "data_mask")
)
a <- function(.se, ...) with_bindings(.arrange_loc(rowData(.se), ...), !!!c(assays(.se)@listData, colData(.se)@listData))
a(.se, rowSums(A1))
a <- function(.se, ...) with_bindings(.arrange_loc(rowData(.se), !!!exprs(...)), !!!c(assays(.se)@listData, colData(.se)@listData))
a(.se, rowSums(A1))
arrange_row(.se, rowSums(A1))
a <- function(.se, ...) with_bindings(.arrange_loc(to_df(rowData(.se)), !!!exprs(...)), !!!c(assays(.se)@listData, colData(.se)@listData))
arrange_row(.se, rowSums(A1))
a(.se, rowSums(A1))
a <- function(.se, ...) with_bindings(slice(rowData(.se), ...), !!!c(assays(.se)@listData, colData(.se)@listData))
a <- function(.se, ...) with_bindings(slice(to_df(rowData(.se)), ...), !!!c(assays(.se)@listData, colData(.se)@listData))
a(.se, rowSums(A1))
a <- function(.se, ...) with_bindings(slice(to_df(rowData(.se)), !!!exprs(...)), !!!c(assays(.se)@listData, colData(.se)@listData))
a(.se, rowSums(A1))
a <- function(.se, ...) with_bindings(slice(rowData(.se), !!!exprs(...)), !!!c(assays(.se)@listData, colData(.se)@listData))
a(.se, rowSums(A1))
a(.se, which(rowSums(A1))>1000)
a(.se, which(rowSums(A1)>1000))
devtools::load_all(".")
.se %>% slice_max(rowSums(A1), n=3, .dim="row")
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask")
)
.se %>% slice(which(rowSums(A1) > 1000), .dim="row")
.se %>% slice(which(rowSums(A1) > 2000), .dim="row")
.se %>% slice(which(rowSums(A1) > 1100), .dim="row")
rowSums(assay(.se, "A1"))
.se %>% slice(which(rowSums(A1) > 1300), .dim="row")
.se %>% slice(which(rowSums(A1) > 1100), .dim="row")
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"), env=caller_env()
)
.se %>% slice_max(rowSums(A1), n=3, .dim="row")
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"), env=caller_env()
)
env_names(caller_env())
env_names(current_env())
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"), .env = caller_env()
)
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"), .env = current_env()
)
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"), .env = parent.env()
)
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"), .env = parent.env(current_env())
)
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"), !!!caller_env()
)
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"), !!!as_list(caller_env())
)
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!as_list(caller_env()), !!!attr(DF, "data_mask")
)
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!as_list(caller_env()), !!!attr(DF, "data_mask")
)
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
.env=caller_env(), !!!attr(DF, "data_mask")
)
eval_tidy(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
attr(DF, "data_mask"), .env=caller_env()
)
eval_tidy(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
attr(DF, "data_mask"), env=caller_env()
)
eval_tidy(
dplyr:::slice_rows(DF, ..., .preserve = FALSE),
attr(DF, "data_mask"), env=caller_env()
)
with_bindings(
dplyr:::slice_rows(DF, ..., .preserve = FALSE),
!!!attr(DF, "data_mask"), .env = caller_env()
)
with_bindings(
dplyr:::slice_rows(DF, ..., .preserve = FALSE),
attr(DF, "data_mask"), .env = caller_env()
)
with_bindings(
dplyr:::slice_rows(DF, ..., .preserve = FALSE),
.data=attr(DF, "data_mask"), .env = caller_env()
)
with_bindings(
dplyr:::slice_rows(DF, ..., .preserve = FALSE),
!!!attr(DF, "data_mask"), .env = caller_env()
)
as_data_mask(c(DF, attr(DF, "data_mask")))
dm <- as_data_mask(c(DF, attr(DF, "data_mask")))
eval_tidy(!!!exprs(...), dm)
eval_tidy(..., dm)
dm
env_names(dm$.env)
env_names(dm$.top_env)
eval_tidy(..., dm, caller_env())
with_bindings(eval_tidy(..., dm, caller_env()), !!!attr(DF, "data_mask")
with_bindings(eval_tidy(..., dm, caller_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(..., dm, caller_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(enquos(...), dm, caller_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(!!!enquos(...), dm, caller_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(!!!exprs(...), dm, caller_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(c(...), dm, caller_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(!!!exprs(c(...)), dm, caller_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(!!!exprs(...), dm, caller_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(splice(exprs(...)), dm, caller_env()), !!!attr(DF, "data_mask"))
.se %>% slice_max(rowSums(A1), n=3, .dim="row")
with_bindings(eval_tidy(splice(enquos(...)), dm, caller_env()), !!!attr(DF, "data_mask"))
dm <- as_data_mask(c(DF, attr(DF, "data_mask")))
with_bindings(eval_tidy(splice(enquos(...)), dm, caller_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(splice(...), dm, caller_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(..., dm, current_env()), !!!attr(DF, "data_mask"))
with_bindings(eval_tidy(..., dm), !!!attr(DF, "data_mask"))
with_bindings(eval(...), !!!attr(DF, "data_mask"))
with_bindings(A1, !!!attr(DF, "data_mask"))
with_bindings(idx(A1), !!!attr(DF, "data_mask"))
with_bindings(idx(A1), !!!attr(DF, "data_mask"), .env = current_env())
with_bindings(idx(A1), !!!attr(DF, "data_mask"), .env = caller_env())
env_names(caller_env())
with_bindings(idx, !!!attr(DF, "data_mask"), .env = caller_env())
idx
idx
env_bind(!!!attr(DF, "data_mask"), .env = caller_env())
idx()
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE)
dplyr:::slice_rows(DF, ..., .preserve = FALSE)
env_names(caller_env())
env2 <- env_bind(!!!attr(DF, "data_mask"), .env = caller_env())
env_names(env2)
env2 <- caller_env()
env_bind(!!!attr(DF, "data_mask"), .env = env2)
env_names(env2)
eval_tidy(dplyr:::slice_rows(DF, ..., .preserve = FALSE), env = env2)
dplyr:::slice_rows
devtools::load_all(".")
devtools::load_all(".")
.se %>% slice_max(rowSums(A1), n=3, .dim="row")
devtools::load_all(".")
.se %>% slice_max(rowSums(A1), n=3, .dim="row")
mask$eval_all(quo)
env_names(caller_env())
env_name(parent.env())
env_name(parent.env(current_env()))
env_name(parent.frame())
env_name(parent.frame(2))
parent.frame(2)
devtools::load_all(".")
.se %>% slice_max(rowSums(A1), n=3, .dim="row")
v
mask$eval_all(quo)
env_names(caller_env())
mask$current_vars()
mask$get_env_bindings()
env_name(mask$get_env_bindings()0
env_name(mask$get_env_bindings())
env_names(mask$get_caller_env())
class(mask)
eval_tidy(quo, mask)
devtools::load_all(".")
.se %>% slice(which(rowSums(A1)), .dim="row")
devtools::load_all(".")
.se %>% slice(which(rowSums(A1)), .dim="row")
.se %>% slice(which(C>5), .dim="row")
devtools::load_all(".")
.se %>% slice(which(C>5), .dim="row")
.se %>% slice(which(C>5), .dim="row")
.rowdata <- DataFrame(
A=rep(letters[1:3], each=6),
B=rep(letters[1:6], each=3),
C=1:18
)
rownames(.rowdata) = letters[1:18]
.coldata <- DataFrame(
D=rep(letters[1:2], each=6),
E=rep(letters[1:3], each=4),
F=1:12
)
rownames(.coldata) = month.abb[1:12]
.a1 <- matrix(1:216, nrow = 18)
.a2 <- matrix(216:1, nrow = 18)
.se <- SummarizedExperiment::SummarizedExperiment(
assays = list(A1=.a1, A2=.a2),
rowData = .rowdata,
colData = .coldata
)
devtools::load_all(".")
.rowdata <- DataFrame(
A=rep(letters[1:3], each=6),
B=rep(letters[1:6], each=3),
C=1:18
)
rownames(.rowdata) = letters[1:18]
.coldata <- DataFrame(
D=rep(letters[1:2], each=6),
E=rep(letters[1:3], each=4),
F=1:12
)
rownames(.coldata) = month.abb[1:12]
.a1 <- matrix(1:216, nrow = 18)
.a2 <- matrix(216:1, nrow = 18)
.se <- SummarizedExperiment::SummarizedExperiment(
assays = list(A1=.a1, A2=.a2),
rowData = .rowdata,
colData = .coldata
)
.se %>% slice(which(rowSums(A1)), .dim="row")
.se %>% slice(which(rowSums(A1)), .dim="row")
with_bindings(
dplyr:::slice_rows(DF, ..., .preserve = FALSE),
!!!attr(DF, "data_mask")
with_bindings(
dplyr:::slice_rows(DF, ..., .preserve = FALSE),
!!!attr(DF, "data_mask"))
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"))
.se %>% slice(which(rowSums(A1) > 1200), .dim="row")
.se %>% slice(which(rowSums(A1)), .dim="row")
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"))
.se %>% slice(which(rowSums(A1) > 1200), .dim="row")
with_bindings(
dplyr:::slice_rows(DF, !!!exprs(...), .preserve = FALSE),
!!!attr(DF, "data_mask"))
devtools::load_all(".")
.se %>% slice(which(rowSums(A1) > 1200), .dim="row")
.se %>% slice(which(rowSums(A1) > 1300), .dim="row")
.se %>% slice_head(n=3, .dim="row")
.se %>% slice_sample(n=3, .dim="row")
devtools::load_all(".")
.se %>% slice_sample(n=3, .dim="row")
.se %>% slice_head(n=3, .dim="row")
devtools::load_all(".")
.se %>% slice_head(n=3, .dim="row")
.se %>% slice_sample(n=3, .dim="row")
.se %>% slice_tail(n=3, .dim="row")
.se %>% slice(which(rowSums(A1) > 1300), .dim="row")
q
.se %>% slice(which(C>5), .dim="row")
usethis::use_test("slice-se")
devtools::test("slice-se")
devtools::test(filter="slice-se")
devtools::load_all(".")
devtools::test(filter="slice-se")
devtools::load_all(".")
devtools::test(filter="slice-se")
devtools::test(filter="slice-se")
set.seed(1)
SE <- .se %>% slice_sample(n=3, .dim="row")
rowData(SE)
devtools::test(filter="slice-se")
SE <- .se %>% slice(1, .dim="col")
devtools::load_all(".")
devtools::test(filter="slice-se")
.se %>% slice_max(C, n = 3, .dim = "col")
.se %>% slice_max(F, n = 3, .dim = "col")
.se %>% slice_max(F, n = 3, .dim = "col")
devtools::test(filter="slice-se")
devtools::test(filter="slice-se")
SE <- .se %>% slice(which(assay(., "A1") > 1300), .dim="row")
SE
SE <- .se %>% slice(which(assay(., "A1") > 1200), .dim="row")
.se %>% slice(which(assay(., "A1") > 1200), .dim="row")
.se %>% slice(which(assay(.se, "A1") > 1200), .dim="row")
.se %>% slice(which(rowSums(assay(., "A1")) > 1200), .dim="row")
.se %>% slice(which(rowSums(assay(., "A1")) > 1300), .dim="row")
.se %>% slice(which(rowSums(assay(., "A1")) > 1300), .dim="row") %>% rowData()
devtools::test(filter="slice-se")
a <- function(.se, ...) {
with_bindings(
slice(rowData(.se), !!!exprs(...)),
!!!c(assays(.se)@listData, colData(.se)@listData)
)
}
a(.se, which(rowSums(A1)>1000))
amax <- function(.se, ...) {
with_bindings(
slice_max(rowData(.se), !!!exprs(...)),
!!!c(assays(.se)@listData, colData(.se)@listData)
)
}
amax(.se, rowSums(A1), n=3)
a(.se, which(rowSums(A1)>1000))
amax <- function(.se, ...) {
with_bindings(
slice_max(rowData(.se), !!!enquo(...)),
!!!c(assays(.se)@listData, colData(.se)@listData)
)
}
amax(.se, rowSums(A1), n=3)
Qq
amax <- function(.se, ...) {
with_bindings(
slice_max(rowData(.se), ...),
!!!c(assays(.se)@listData, colData(.se)@listData)
)
}
amax(.se, rowSums(A1), n=3)
amax <- function(.se, ...) {
eval_tidy(
slice_max(rowData(.se), ...),
c(assays(.se)@listData, colData(.se)@listData)
)
}
amax(.se, rowSums(A1), n=3)
?eval_tidy
amax <- function(.se, ...) {
eval_tidy(
slice_max(rowData(.se), ...),
as_data_mask(c(assays(.se)@listData, colData(.se)@listData))
)
}
amax(.se, rowSums(A1), n=3)
usethis::use_test("arrange-se")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
DF
.rowdata
GDF <- .rowdata %>% group_by(A)
group_data(GDF)
group_data(GDF)$.rows
group_data(GDF[12:1, ])$.rows
group_data(dplyr_row_slice(GDF, 12:1))$.rows
group_data(dplyr_row_slice.DFrame(GDF, 12:1))$.rows
mm = mtcars %>% group_by(gear)
mm[, 1]
group_data(mm[, 1])
group_data(mm[1:3, ])
group_data(mm[, 10])
`[.grouped_df`
dplyr:::`[`
dplyr:::`[.grouped_df`
NextMethod
?NextMethod
library(ensembldb)
?proteinToGenome
proteinToGenome(IRanges(names="P22307"), idType = "uniprot_id")
proteinToGenome(IRanges(start = 0, names="P22307"), idType = "uniprot_id")
proteinToGenome(IRanges(start = 0, names="P22307"), ens,idType = "uniprot_id")
library(EnsDb.Hsapiens.v86)
proteinToGenome(IRanges(start = 0, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
proteinToGenome(IRanges(start = 0, end=1000, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
proteinToGenome(IRanges(start = 0, end=500, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
proteinToGenome(IRanges(start = 1, end=500, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
proteinToGenome(IRanges(start = 1, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
proteinToGenome(IRanges(start = 1, end=Inf, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
proteinToGenome(IRanges(start = 1, end=1e5, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
proteinToGenome(IRanges(start = 1, end=600, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
proteinToGenome(IRanges(start = 1, end=400, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
devtools::test(filter="arrange-se")
devtools::test(filter="arrange-se")
# remove groups to be able to compare
gpdata <- group_data(rowData(SE))
devtools::test(filter="arrange-se")
devtools::test(filter="arrange-se")
.se[c(18:1), ] %>% rowData()
SE
.se[c(18:1), ] %>% rowData()
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
group_data(SE)
devtools::load_all(".")
group_data(SE)
SE
colData(SE)
devtools::load_all(".")
group_data(SE)
GSE <- group_by(.se, A, .dim="row")
SE <- GSE %>% arrange(-C, .dim="row")
group_data(SE)
group_data(SE)$row$.rows
rowData(.se) %>% group_by(A) %>% arrange(-C)
rowData(.se) %>% group_by(A) %>% arrange(-C) %>% group_data()
rowData(.se) %>% group_by(A) %>% arrange(-C) %>% group_data() %>% pull(.rows)
rowData(.se) %>% group_by(A) %>% arrange(-C) %>% group_data() %>% dplyr::pull(.rows)
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::test(filter="slice-se")
devtools::load_all(".")
devtools::test(filter="slice-se")
devtools::load_all(".")
devtools::test(filter="slice-se")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
group_by(.se, rowSums(A1) > 1200, .dim="row") %>& group_data()
group_by(.se, rowSums(A1) > 1200, .dim="row")
mtcars %>% group_by(cyl>5)
group_by(.se, C > 10, .dim="row") %>% group_data()
dplyr::group_by
dplyr:::group_by.data.frame
df
DF
df <- to_df(rowData(.se))
df
df %>% group_by(rowSums(assay(se, "A1")) > 1300)
df %>% group_by(rowSums(assay(.se, "A1")) > 1300)
with_bindings(df %>% group_by(rowSums(A1 > 1300)), !!!assays(.se)@listData)
with_bindings(df %>% group_by(rowSums(A1 > 1200)), !!!assays(.se)@listData)
A1
with_bindings(df %>% group_by(rowSums(A1)>1200), !!!assays(.se)@listData)
with_bindings(df %>% group_by(rowSums(A1)>1300), !!!assays(.se)@listData)
with_bindings(df %>% group_by(rowSums(A1[, `F` > 5])>1300), !!!assays(.se)@listData, !!!se@colData@listData)
with_bindings(df %>% group_by(rowSums(A1[, `F` > 5])>1300), !!!assays(.se)@listData, !!!.se@colData@listData)
with_bindings(rowSums(A1[, `F` > 5]), !!!assays(.se)@listData, !!!.se@colData@listData)
devtools::load_all(".")
.se %>% group_by(C>5, .dim="row")
.se %>% group_by(C>5, .dim="row") %>% group_data()
.se %>% group_by(C>9, .dim="row") %>% group_data()
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::load_all(".")
devtools::test(filter="arrange-se")
devtools::test(filter="arrange-se")
devtools::test()
proteinToGenome(IRanges(start = 1, end=400, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
proteinToGenome(IRanges(start = 1, end=400, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id") %>% reduce()
gr <- proteinToGenome(IRanges(start = 1, end=400, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
gr <- proteinToGenome(IRanges(start = 1, end=800, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
gr <- proteinToGenome(IRanges(start = 1, end=543, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
gr
reduce(unlist(gr$P22307))
library(GenomicRanges)
reduce(unlist(gr$P22307))
Reduce(unlist(gr$P22307))
reduce(unlist(gr$P22307))
?`reduce,GRangesList-method`
?`unlist,GenomicRangesList-method`
class(gr$P22307)
gr <- proteinToGenome(IRanges(start = 1, end=400, names="P22307"), EnsDb.Hsapiens.v86, idType = "uniprot_id")
reduce(unlist(gr$P22307))
genes(EnsDb.Hsapiens.v86, "P22307", filter=UniprotFilter(row_data$Uniprot))
genes(EnsDb.Hsapiens.v86, c("P22307"), filter=UniprotFilter(row_data$Uniprot))
genes(EnsDb.Hsapiens.v86, filter=UniprotFilter(c("P22307")))
?proteins
proteins(EnsDb.Hsapiens.v86, filter=UniprotFilter(c("P22307")), return.type="AAStringSet")
proteins(EnsDb.Hsapiens.v86, filter=UniprotFilter(c("P22307")))
cdsBy(EnsDb.Hsapiens.v86, filter=UniprotFilter(c("P22307")))
cds <- cdsBy(EnsDb.Hsapiens.v86, filter=UniprotFilter(c("P22307")))
genes(EnsDb.Hsapiens.v86, filter=UniprotFilter(c("P22307")))
gdf <- genes(EnsDb.Hsapiens.v86, filter=UniprotFilter(c("P22307")))
split(gdf)
split(gdf, mcols(gdf$uniprot_id))
split(gdf, mcols(gdf)$uniprot_id))
split(gdf, mcols(gdf)$uniprot_id)
BiocManager::install("plyranges")
gdf <- genes(EnsDb.Hsapiens.v86, columns=c("uniprot_id"))
gdf
library(plyranages)
library(plyranges)
gdf %>% filter(!is.na(uniprot_id))
gdf %>% filter(!is.na(uniprot_id)) %>% group_by(uniprot_id) %>% summarise(n=n())
?summarise
gdf %>% filter(!is.na(uniprot_id)) %>% group_by(uniprot_id) %>% reduce_ranges()
gdf %>% filter(!is.na(uniprot_id)) %>% group_by(uniprot_id) %>% summarise(ranges=reduce(ranges))
gdf %>% filter(!is.na(uniprot_id)) %>% group_by(uniprot_id) %>% summarise(ranges=List(ranges))
write.csv(installed.packages(), "~/work/R4.0_package.csv")
devtools::load_all(".")
devtools::test()
dplyr:::filter_rows
dplyr:::filter.data.frame
devtools::test()
dplyr:::slice_rows
